

<%= form_for(@venue) do |f| %>
  <% if @venue.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@venue.errors.count, "error") %> prohibited this venue from being saved:</h2>

      <ul>
      <% @venue.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>
  <article id='left-block'>
    <div class="control-group">
      <%= f.label :venue_name, class: 'control-label' %>
      <div class="controls">
        <%= f.text_field :venue_name %>
      </div>        
    </div>

    <div class="control-group">
      <%= f.label :description, class: 'control-label' %>
      <div class="controls">
        <%= f.text_area :description, rows: 3, maxlength: 250 %>
      </div>        
    </div>

    <div class="control-group">
      <%= f.label :contact_name, class: 'control-label' %>
      <div class="controls">
        <%= f.text_field :contact_name %>
      </div>        
    </div>
    <div class="control-group">
      <%= f.label :contact_number, class: 'control-label' %>
      <div class="controls">
        <%= f.text_field :contact_number %>
      </div>        
    </div>
    <div class="field ">
      <%= f.text_field :address %>
    </div>
    
    <div class="field ">
      <%= f.text_field :latitude %>
    </div>
    <div class="field ">
      <%= f.text_field :longitude %>
    </div>

    <div class="actions">
      <%= f.submit 'Accept', class: "btn btn-primary" %>
    </div>

  </article>
  <article id='right-block'>
    <div class="site-map">
            <div class='address-first-line'>
                <%= label_tag 'queryInput', 'Address' + ': *', :class => 'control-label-2', id: 'right-address_label' %></td>
                <%= text_field_tag 'queryInput', nil, :placeholder => 'Put your address' %>
                <input type="button" id="search_button" value="Buscar" class='btn btn-success' onclick="doSearch()"/>
                  <div class='tick' id='address_tick'></div>
              </div>
              <div class='verifications' id='verifica'></div>

              <%= label_tag 'direccionActual', 'Current address' + ':', :class => 'control-label-2' %><p id='currentAddress'></p>

              <div style="position: absolute; left: 540px;">
                  <div id="searchwell"></div>
              </div>
              <div id="map" style="height: 250px; border: 1px solid #979797;"></div>
              <div id="InfoAddress"></div>
    </div>
  </article>
    
<% end %>



<link href="http://www.google.com/uds/css/gsearch.css" rel="stylesheet" type="text/css"/>
<script src="http://maps.google.com/maps/api/js?sensor=false"></script>
<script src="http://www.google.com/uds/api?file=uds.js&amp;v=1.0&amp;key=AIzaSyBrdI5hG4URcBx_c-_t6BtWmSYzsPvicqc" type="text/javascript"></script>

<script type="text/javascript">
    //<![CDATA[

    // Our global state
    var gLocalSearch;
    var gMap;
    var gInfoWindow;
    var gSelectedResults = [];
    var gCurrentResults = [];
    var gSearchForm;

    // Create our "tiny" marker icon
    var gYellowIcon = new google.maps.MarkerImage(
            "http://labs.google.com/ridefinder/images/mm_20_yellow.png",
            new google.maps.Size(12, 20),
            new google.maps.Point(0, 0),
            new google.maps.Point(6, 20));
    var gRedIcon = new google.maps.MarkerImage(
            "http://labs.google.com/ridefinder/images/mm_20_red.png",
            new google.maps.Size(12, 20),
            new google.maps.Point(0, 0),
            new google.maps.Point(6, 20));
    var gSmallShadow = new google.maps.MarkerImage(
            "http://labs.google.com/ridefinder/images/mm_20_shadow.png",
            new google.maps.Size(22, 20),
            new google.maps.Point(0, 0),
            new google.maps.Point(6, 20));
    var gActual = new   google.maps.MarkerImage(
            "http://maps.google.com/mapfiles/arrow.png",
            new google.maps.Size(22, 36),
            new google.maps.Point(0, 0),
            new google.maps.Point(6, 20));

    // Set up the map and the local searcher.
    function OnLoad() {
      console.log('onLoad');
        // Initialize the map with default UI.
        gMap = new google.maps.Map(document.getElementById("map"), {
            center : new google.maps.LatLng('40.417172', '-3.703254'),
            zoom : 18,
            mapTypeId : 'roadmap'
        });

        // Create one InfoWindow to open when a marker is clicked.
        gInfoWindow = new google.maps.InfoWindow;
        google.maps.event.addListener(gInfoWindow, 'closeclick', function() {
            unselectMarkers();
        });

        // Initialize the local searcher
        gLocalSearch = new GlocalSearch();
        gLocalSearch.setSearchCompleteCallback(null, OnLocalSearch);
        recoverData();

    }

    function unselectMarkers() {
      console.log('unselectMarkers');
        for (var i = 0; i < gCurrentResults.length; i++) {
            gCurrentResults[i].unselect();
        }
    }

    function doSearch() {
      console.log('doSearch');
        var query = document.getElementById("queryInput").value;
        gLocalSearch.setCenterPoint(gMap.getCenter());
        gLocalSearch.execute(query);
        //onceReceivedAddress();
    }

    // Called when Local Search results are returned, we clear the old
    // results and load the new ones.
    function OnLocalSearch() {
        console.log('OnLocalSearch');

        if (!gLocalSearch.results) return;
        var searchWell = document.getElementById("searchwell");
        // Clear the map and the old search well
        searchWell.innerHTML = "";
        for (var i = 0; i < gCurrentResults.length; i++) {
            gCurrentResults[i].marker().setMap(null);
        }
        // Close the infowindow
        gInfoWindow.close();

        gCurrentResults = [];
        for (var i = 0; i < gLocalSearch.results.length; i++) {
            gCurrentResults.push(new LocalResult(gLocalSearch.results[i]));
        }


        var attribution = gLocalSearch.getAttribution();
        if (attribution) {
            document.getElementById("searchwell").appendChild(attribution);
        }

        // Move the map to the first result
        var first = gLocalSearch.results[0];

    try {
            gMap.setCenter(new google.maps.LatLng(parseFloat(first.lat),
                parseFloat(first.lng)));
        } catch(err) {
          //Handle errors here
          $('#verifica').text("Select a valid address");
          $('#address_tick').html("&#10008;");
          $('#address_tick').css("color", "red");
        }

        if (gLocalSearch.results.length == 1) {
            $('#venue_latitude').attr('value', first.lat);
            $('#venue_longitude').attr('value', first.lng);
        var query = document.getElementById("queryInput").value;
        $('#venue_address').attr('value', query);
        $('#currentAddress').text(query);
        onceReceivedAddress();

           gMap.setZoom(18)
       }else{
           document.getElementById('InfoAddress').innerHTML = '<p>' + "Pick a mark" + '<\/p>';
           gMap.setZoom(12)

       }



    }

    // Cancel the form submission, executing an AJAX Search API search.
    function CaptureForm(searchForm) {
              console.log('CaptureForm');

        gLocalSearch.execute(searchForm.input.value);
        return false;
    }



    // A class representing a single Local Search result returned by the
    // Google AJAX Search API.
    function LocalResult(result) {
        console.log('LocalResult');
        var me = this;
        me.result_ = result;
        me.resultNode_ = me.node();
        me.marker_ = me.marker();
        google.maps.event.addDomListener(me.resultNode_, 'mouseover', function() {
            // Highlight the marker and result icon when the result is
            // mouseovered.  Do not remove any other highlighting at this time.
            me.highlight(true);
        });
        google.maps.event.addDomListener(me.resultNode_, 'mouseout', function() {
            // Remove highlighting unless this marker is selected (the info
            // window is open).
            if (!me.selected_) me.highlight(false);
        });
        google.maps.event.addDomListener(me.resultNode_, 'click', function() {
            me.select();
        });

        // Es para mostrar la informaci√≥n de todas las busquedas
       // document.getElementById("searchwell").appendChild(me.resultNode_);
    }

    LocalResult.prototype.node = function() {
      console.log('prototype.node');

        if (this.resultNode_) return this.resultNode_;
        return this.html();
    };

    // Returns the GMap marker for this result, creating it with the given
    // icon if it has not already been created.
    LocalResult.prototype.marker = function() {
      console.log('prototype.marker');

        var me = this;
        if (me.marker_)
            return me.marker_;
        var marker = me.marker_ = new google.maps.Marker({
            position: new google.maps.LatLng(parseFloat(me.result_.lat),
                    parseFloat(me.result_.lng)),
            icon: gYellowIcon, shadow: gSmallShadow, draggable : true, map: gMap});
        google.maps.event.addListener(marker, "click", function() {
            me.select();
        });
        google.maps.event.addListener(marker, "dragend", function() {
            me.select();
        });
        return marker;
    };

    // Unselect any selected markers and then highlight this result and
    // display the info window on it.
    LocalResult.prototype.select = function() {
      console.log('prototype.select');

        unselectMarkers();
        this.selected_ = true;
        this.highlight(true);
        //gInfoWindow.setContent(this.html(true));
        //gInfoWindow.open(gMap, this.marker());

        document.getElementById('InfoAddress').innerHTML = '';

        var lat = (this.marker().position.toString()).split(",")[0]  ;
        lat = lat.replace('(','');
        var long = (this.marker().position.toString()).split(",")[1]  ;
        long = long.replace(')','');
        $('#venue_latitude').attr('value', lat);
        $('#venue_longitude').attr('value', long);
        var address = document.getElementById("queryInput").value;

        $('#venue_address').attr('value', address);
        onceReceivedAddress();

    };

    LocalResult.prototype.isSelected = function() {
      console.log('prototype.isSelected');

        return this.selected_;
    };

    // Remove any highlighting on this result.
    LocalResult.prototype.unselect = function() {
      console.log('prototype.unselect');
 
        this.selected_ = false;
        this.highlight(false);
    };

    // Returns the HTML we display for a result before it has been "saved"
    LocalResult.prototype.html = function() {
      console.log('prototype.html');
 
        var me = this;
        var container = document.createElement("div");
        container.className = "unselected";
        container.appendChild(me.result_.html.cloneNode(true));
        return container;
    }

    LocalResult.prototype.highlight = function(highlight) {
      console.log('prototype.highlight');

        this.marker().setOptions({icon: highlight ? gRedIcon : gYellowIcon});
        this.node().className = "unselected" + (highlight ? " red" : "");
    }

  $("#queryInput").keyup(function(event){
    console.log('keyup');

      if(event.keyCode == 13){
          $("#search_button").click();
      }
  });


  function onceReceivedAddress (){
    console.log('onceReceivedAddress');
    var num = 0;

    $('.hiddenFields').each(function(){
      if($(this).val().length == 0){
        num +=1;
      }
    });
    if(num == 0){
      $('#verifica').text('');
      $('#address_tick').html("&#10004;");
      $('#address_tick').css("color", "green");
    }
  }

  function recoverData (){
    console.log('recoverData');
    var direccion = $('#venue_address').val();
    if(direccion.length != 0){
      $('#queryInput').attr('value', direccion);

      doSearch();
    }

  }

    GSearch.setOnLoadCallback(OnLoad);

</script>

<script type="text/javascript">
    $(document).ready(function(){
    console.log('ready');
    $('.main-container').css('height', '500px');
        var errors = $('#error_explanation').length;
        if(errors > 0){
            $('.form-horizontal').addClass('pos-down');
            $('.site-map').addClass('pos-down');
        }
    });
</script>
